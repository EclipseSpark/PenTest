#!/usr/bin/env python

import requests
import sys
import fileinput
import re
from optparse import OptionParser
from dateutil.relativedelta import *
from dateutil import parser
from lxml import etree

## Date of patch, located as the "Last-modified" attribute in the headers
vuln = parser.parse("July 2nd, 2013")

def LoadShodan(document):
'''
This loads a XML file from Shodan. Usefull for searching potential ReadyNAS devices with a particular string.
- Server: Apache Last-Modified: Accept-Ranges: bytes Pragma: public Content-Length: 115 -
'''
	doc = etree.parse(document)

	for df in doc.iter('data'):
		print(df.getparent().attrib['ip'])
		#print(df.xpath('//host', tag='ip'))
		#content = etree.tostring(df)
		mo = re.findall(r'[A-Z][A-Za-z][A-Za-z], \d\d [A-Z][A-Za-z][A-Za-z] \d{4}', df.text)
		dt = parser.parse(mo[1])
		
		if dt < vuln:
			print('Vul')
			print('---------------END')
		else:
			print('patched')

parser = OptionParser()
''' Not Finished
parser.add_option("-s", "--shodan", dest="xmlname",
                  help="Read from a Shodan XMLFILE", metavar="XMLFILE")
'''
parser.add_option("-f", "--file", dest="filename",
                  help="Read from a FILE", metavar="FILE")
parser.add_option("-H", "--host", dest="host",
                  help="Single IP/Domain", metavar="HOST")
(options, args) = parser.parse_args()

host = []
#print(options.host)
if (sys.argv[1] == "-H") or (sys.argv[1] == "--host"):
	host.append(options.host)
	
#Supports Multiple IP's in a file
else: 
	filehosts = options.filename
	for line in fileinput.input(files = filehosts):
		host.append(line.rstrip())
	

try:
	for nas in host:
		r = requests.get('http://' + nas)
	
		# {Versions < 4.2.24}
		if '<meta http-equiv="refresh" content="0; url=/shares/">' and "Copyright 2007, NETGEAR" in r.text:
			print("\n\t ----------------------------START Host:\t"+ nas+"------------------------------\n\n")
			print(r.text)
			#print(r.status_code)
			print(r.headers)
			print(r.headers['last-modified'])
			print("\n\t ----------------------------END Host:\t"+ nas+"------------------------------\n\n")
	
		else:
			print('Not a ReadyNAS machine')
except ValueError:
	print("Oops!  That was no valid number.  Try again...")
